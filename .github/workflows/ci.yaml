name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  FLUTTER_VERSION: '3.35.1'

jobs:
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        
      - name: Analyze project source
        run: dart analyze --fatal-infos
        
      - name: Check pub score
        run: dart pub publish --dry-run

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Generate documentation
        run: dart doc .
        
      - name: Check required files
        run: |
          test -f README.md || (echo "README.md missing" && exit 1)
          test -f CHANGELOG.md || (echo "CHANGELOG.md missing" && exit 1)
          test -f LICENSE || (echo "LICENSE missing" && exit 1)
          test -f pubspec.yaml || (echo "pubspec.yaml missing" && exit 1)

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Run security audit
        run: dart pub deps --json | jq '.packages[] | select(.kind == "direct")' | jq -r '.name'
        continue-on-error: true

  publish-check:
    name: Publish Check
    runs-on: ubuntu-latest
    needs: [analyze, documentation]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Dry run publish
        run: dart pub publish --dry-run
        
      - name: Check package score
        run: |
          echo "Package is ready for publishing!"
          echo "Version: $(grep '^version:' pubspec.yaml | cut -d' ' -f2)"
          echo "Run 'dart pub publish' manually to publish to pub.dev"

  publish:
    name: Publish to pub.dev
    runs-on: ubuntu-latest
    needs: [analyze, documentation]
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: pub.dev credentials
        run: |
          mkdir -p $HOME/.config/dart
          echo '${{ secrets.PUB_JSON }}' >> $HOME/.config/dart/pub-credentials.json
          
      - name: Publish to pub.dev
        run: dart pub publish --force